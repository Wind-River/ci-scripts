# Copyright (c) 2017 Wind River Systems Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

version: '3.1'
services:
  jenkins:
    image: $REGISTRY/jenkins-master
    environment:
      JAVA_OPTS: '-Djenkins.install.runSetupWizard=false'
      JENKINS_OPTS: '--httpPort=8080 --httpListenAddress=0.0.0.0'
      JENKINS_UI_URL: "https://$HOST"
    networks:
      - jenkinsnet
    tmpfs:
      - /tmp:exec
    volumes:
      - jenkins_home:/var/jenkins_home

  rproxy:
    image: blacklabelops/nginx
    ports:
      - "443:443"
    links:
      - jenkins
      - toaster_aggregator
    environment:
      SERVER1HTTPS_ENABLED: "true"
      SERVER1HTTP_ENABLED: "false"
      SERVER1SERVER_NAME: "localhost"
      SERVER1REVERSE_PROXY_LOCATION1: "/"
      SERVER1REVERSE_PROXY_PASS1: "http://jenkins:8080"
      SERVER1PROXY_APPLICATION: "jenkins"
      SERVER1REVERSE_PROXY_LOCATION2: "/toaster_aggregator"
      SERVER1REVERSE_PROXY_PASS2: "http://toaster_aggregator:6543"
      NGINX_REDIRECT_PORT80: "true"
      SERVER1CERTIFICATE_DNAME: "/CN=WindRiver/OU=Linux/O=windriver.com/L=Alameda/C=US"
      DISABLE_ACCESS_LOG: "true"
      LOG_LEVEL: "warn"
    networks:
      - jenkinsnet
    tmpfs:
      - /tmp
    volumes:
      # Volume avoids recreating certs on every run
      - rproxy_nginx_config:/etc/nginx

  client:
    image: $REGISTRY/jenkins-swarm-client
    depends_on:
      - jenkins
    environment:
      COMMAND_OPTIONS: "-master http://jenkins:8080/ -disableSslVerification -labels 'docker' -executors 2"
      SWARM_DELAYED_START: "15"
    networks:
      - jenkinsnet
    tmpfs:
      - /tmp
    volumes:
      # Allow jenkins agent to use host docker to run containers
      - /var/run/docker.sock:/var/run/docker.sock
      # Required to mount workspace from swarm client into docker container
      - jenkins_agent:/home/jenkins
      - /etc/hostname:/etc/hostname
      - /etc/localtime:/etc/localtime

  consul:
    image: consul:latest
    networks:
      - jenkinsnet
    command: "agent -server -ui -bootstrap-expect=1 -client=0.0.0.0"

  registrator:
    image: gliderlabs/registrator:latest
    command: -ip=$HOSTIP consul://consul:8500
    networks:
      - jenkinsnet
    depends_on:
      - consul
    links:
      - consul
    volumes:
      # Allow jenkins agent to use host docker to run containers
      - /var/run/docker.sock:/tmp/docker.sock
      - /etc/hostname:/etc/hostname

  toaster_aggregator:
    image: $REGISTRY/toaster_aggregator
    depends_on:
      - consul
    links:
      - consul
    networks:
      - jenkinsnet

volumes:
  jenkins_home:
  jenkins_agent:
  rproxy_nginx_config:

networks:
  jenkinsnet:
    driver: bridge
